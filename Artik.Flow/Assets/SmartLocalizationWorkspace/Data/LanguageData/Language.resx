<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="Drift.Defense" xml:space="preserve">
		<value>Defense</value>
	</data>
	<data name="Drift.Equipped" xml:space="preserve">
		<value>Equipped</value>
	</data>
	<data name="Drift.GameSetup" xml:space="preserve">
		<value>Game Setup</value>
	</data>
	<data name="Drift.IAP.Before" xml:space="preserve">
		<value>Before $14.99</value>
	</data>
	<data name="Drift.IAP.BestValue" xml:space="preserve">
		<value>Best Value</value>
	</data>
	<data name="Drift.IAP.CarNotice" xml:space="preserve">
		<value>Exclusive skin and powerful weapons!</value>
	</data>
	<data name="Drift.IAP.For" xml:space="preserve">
		<value>For</value>
	</data>
	<data name="Drift.IAP.Hours" xml:space="preserve">
		<value>Hours</value>
	</data>
	<data name="Drift.IAP.HurryUp" xml:space="preserve">
		<value>Hurry Up!</value>
	</data>
	<data name="Drift.IAP.LegendaryVehicle" xml:space="preserve">
		<value>Legendary Vehicle</value>
	</data>
	<data name="Drift.IAP.NeonPack" xml:space="preserve">
		<value>Neon Pack</value>
	</data>
	<data name="Drift.IAP.Now" xml:space="preserve">
		<value>Now</value>
	</data>
	<data name="Drift.IAP.OfferEnds" xml:space="preserve">
		<value>Offer ends in: %</value>
	</data>
	<data name="Drift.IAP.Only" xml:space="preserve">
		<value>Only</value>
	</data>
	<data name="Drift.IAP.Popular" xml:space="preserve">
		<value>Popular</value>
	</data>
	<data name="Drift.IAP.RemoveAdsNotice" xml:space="preserve">
		<value>Remove ads by purchasing any pack!</value>
	</data>
	<data name="Drift.IAP.StarterPack" xml:space="preserve">
		<value>Starter pack promo!</value>
	</data>
	<data name="Drift.IAP.StarterPackGems" xml:space="preserve">
		<value>+% Gems</value>
	</data>
	<data name="Drift.LevelSelect" xml:space="preserve">
		<value>Stage Select</value>
	</data>
	<data name="Drift.LevelSelectDesc" xml:space="preserve">
		<value>Select starting area</value>
	</data>
	<data name="Drift.PowerupAttackDesc" xml:space="preserve">
		<value>An extra missile launcher is attached to your car</value>
	</data>
	<data name="Drift.PowerupAttackTitle" xml:space="preserve">
		<value>Extra damage</value>
	</data>
	<data name="Drift.PowerupDefenseDesc" xml:space="preserve">
		<value>Your ride can withstand one extra impact or crash</value>
	</data>
	<data name="Drift.PowerupDefenseTitle" xml:space="preserve">
		<value>Power shield</value>
	</data>
	<data name="Drift.PowerupEnergyDesc" xml:space="preserve">
		<value>Energy is automatically replenished over time</value>
	</data>
	<data name="Drift.PowerupEnergyTitle" xml:space="preserve">
		<value>Energy enhance</value>
	</data>
	<data name="Drift.Roulette.Title" xml:space="preserve">
		<value>Lucky Spin</value>
	</data>
	<data name="Drift.ShopDesc.BlueScorpion" xml:space="preserve">
		<value>Shop Desc</value>
	</data>
	<data name="Drift.ShopDesc.GreenSpider" xml:space="preserve">
		<value>Shop Desc</value>
	</data>
	<data name="Drift.ShopDesc.OrangeBomber" xml:space="preserve">
		<value>Shop Desc</value>
	</data>
	<data name="Drift.ShopDesc.PurpleDragon" xml:space="preserve">
		<value>Shop Desc</value>
	</data>
	<data name="Drift.ShopDesc.RedDoom" xml:space="preserve">
		<value>Shop Desc</value>
	</data>
	<data name="Drift.ShopDesc.YellowPiranha" xml:space="preserve">
		<value>Shop Desc</value>
	</data>
	<data name="Drift.Tier1" xml:space="preserve">
		<value>Tier1</value>
	</data>
	<data name="Drift.Tier2" xml:space="preserve">
		<value>Tier2</value>
	</data>
	<data name="Drift.Tier3" xml:space="preserve">
		<value>Legendary</value>
	</data>
	<data name="Drift.Unavailable" xml:space="preserve">
		<value>Unavailable</value>
	</data>
	<data name="Drift.Weapons" xml:space="preserve">
		<value>Weapons</value>
	</data>
	<data name="GameplayScreen.Best" xml:space="preserve">
		<value>Best</value>
	</data>
	<data name="HiddenLogo.Join" xml:space="preserve">
		<value>Join!</value>
	</data>
	<data name="IAP.Duplicate" xml:space="preserve">
		<value>Double Gem Pickup</value>
	</data>
	<data name="IAP.Gems" xml:space="preserve">
		<value>% Gem Pack</value>
	</data>
	<data name="IAP.NeedGems" xml:space="preserve">
		<value>Need Gems?</value>
	</data>
	<data name="IAP.Notice" xml:space="preserve">
		<value>All purchase effects are permanent</value>
	</data>
	<data name="IAP.PackLine1" xml:space="preserve">
		<value>Remove Ads</value>
	</data>
	<data name="IAP.PackLine2" xml:space="preserve">
		<value>Get All Characters</value>
	</data>
	<data name="IAP.PackLine3" xml:space="preserve">
		<value>Double Gem Pickup</value>
	</data>
	<data name="IAP.RemoveAds" xml:space="preserve">
		<value>Remove Ads</value>
	</data>
	<data name="IAP.Restore" xml:space="preserve">
		<value>Restore Purchases</value>
	</data>
	<data name="IAP.SuperPackPromotion" xml:space="preserve">
		<value>Super Pack Promotion</value>
	</data>
	<data name="IAP.UnlockAllCharacters" xml:space="preserve">
		<value>Unlock All Characters</value>
	</data>
	<data name="LostScreen.BestScore" xml:space="preserve">
		<value>Best Score</value>
	</data>
	<data name="LostScreen.New" xml:space="preserve">
		<value>New!</value>
	</data>
	<data name="LostScreen.Score" xml:space="preserve">
		<value>Score</value>
	</data>
	<data name="Powerups.Title" xml:space="preserve">
		<value>Power-Ups</value>
	</data>
	<data name="PushNotification.FreeGift" xml:space="preserve">
		<value>Your free gift is waiting!</value>
	</data>
	<data name="Rate.RateAsk1" xml:space="preserve">
		<value>How would you rate</value>
	</data>
	<data name="Rate.RateAsk3" xml:space="preserve">
		<value>Your feedback is really important to us!</value>
	</data>
	<data name="Rate.Submit" xml:space="preserve">
		<value>Submit</value>
	</data>
	<data name="Revive.ReviveAsk" xml:space="preserve">
		<value>Continue?</value>
	</data>
	<data name="Revive.Watch" xml:space="preserve">
		<value>Watch</value>
	</data>
	<data name="Reward.Coins" xml:space="preserve">
		<value>% Gems!</value>
	</data>
	<data name="Reward.Earned" xml:space="preserve">
		<value>You have earned</value>
	</data>
	<data name="Reward.TapToClaim" xml:space="preserve">
		<value>Tap to claim!</value>
	</data>
	<data name="Screenshot.BeatMyScore" xml:space="preserve">
		<value>Beat My Score!</value>
	</data>
	<data name="Shop.Free" xml:space="preserve">
		<value>Free</value>
	</data>
	<data name="Shop.Shop" xml:space="preserve">
		<value>Shop</value>
	</data>
	<data name="StartScreen.BestScore" xml:space="preserve">
		<value>Best Score</value>
	</data>
	<data name="StartScreen.FreeGift" xml:space="preserve">
		<value>Free Gift!</value>
	</data>
	<data name="StartScreen.TapToPlay" xml:space="preserve">
		<value>Tap To Play</value>
	</data>
	<data name="StartScreen.TimesPlayed" xml:space="preserve">
		<value>Times Played</value>
	</data>
	<data name="TryNBuy.BuyIt" xml:space="preserve">
		<value>Buy now and get 2500 gems!</value>
	</data>
	<data name="TryNBuy.FullGame" xml:space="preserve">
		<value>Full game</value>
	</data>
	<data name="TryNBuy.ThankYou" xml:space="preserve">
		<value>Thank you for trying</value>
	</data>
	<data name="Drift.IAP.Purchased" xml:space="preserve">
		<value>Purchased</value>
	</data>
</root>